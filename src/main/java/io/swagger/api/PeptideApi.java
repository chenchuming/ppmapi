/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.25).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.Report;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-04-25T21:01:43.979Z[GMT]")
@Validated
public interface PeptideApi {

    @Operation(summary = "Use peptide sequence. e.g. G, GW, GEP, GTGG, GTTGT, LDEAFEFVK to match against UniProtKB", description = "Gets a list of proteins that match to the query peptide and other search criteria.", tags={ "API Access Paths" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "status=OK. Returns a list of proteins.", content = @Content(schema = @Schema(implementation = Report.class))),
        
        @ApiResponse(responseCode = "400", description = "status=Bad Reqeust.", content = @Content(schema = @Schema(implementation = Error.class))),
        
        @ApiResponse(responseCode = "404", description = "status=Not Found.", content = @Content(schema = @Schema(implementation = Error.class))),
        
        @ApiResponse(responseCode = "5XX", description = "status=Unexpected error.", content = @Content(schema = @Schema(implementation = Error.class))) })
    @RequestMapping(value = "/peptide",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<Report> matchByPeptide(@NotNull @Parameter(in = ParameterIn.QUERY, description = "A protein sequence pattern, it can be a peptide, a user defined pattern, a prosite accesion or identifier and combination of above in logical expressions." ,required=true,schema=@Schema()) @Valid @RequestParam(value = "query", required = true) String query, @NotNull @Parameter(in = ParameterIn.QUERY, description = "Search UniProtKB - SwissProt" ,required=true,schema=@Schema( defaultValue="true")) @Valid @RequestParam(value = "searchSwissProt", required = true, defaultValue="true") Boolean searchSwissProt, @NotNull @Parameter(in = ParameterIn.QUERY, description = "Include Protein Isoforms" ,required=true,schema=@Schema( defaultValue="true")) @Valid @RequestParam(value = "includeIsoforms", required = true, defaultValue="true") Boolean includeIsoforms, @NotNull @Parameter(in = ParameterIn.QUERY, description = "Search UniProtKB - TrEMBL" ,required=true,schema=@Schema( defaultValue="false")) @Valid @RequestParam(value = "searchTrEMBL", required = true, defaultValue="false") Boolean searchTrEMBL, @NotNull @Parameter(in = ParameterIn.QUERY, description = "Search UniProtKB - UniRef100" ,required=true,schema=@Schema( defaultValue="false")) @Valid @RequestParam(value = "searchUniRef100", required = true, defaultValue="false") Boolean searchUniRef100, @Parameter(in = ParameterIn.QUERY, description = "A list of comma-separated NCBI taxonomy IDs" ,schema=@Schema( defaultValue="9606")) @Valid @RequestParam(value = "org", required = false, defaultValue="9606") String org, @Min(0)@Parameter(in = ParameterIn.QUERY, description = "The number of records to skip." ,schema=@Schema(allowableValues={  }
)) @Valid @RequestParam(value = "offset", required = false) Integer offset, @Min(1) @Max(1000) @Parameter(in = ParameterIn.QUERY, description = "The numbers of records to return (max. 100)." ,schema=@Schema(allowableValues={  }, minimum="1", maximum="1000"
)) @Valid @RequestParam(value = "limit", required = false) Integer limit);

}

